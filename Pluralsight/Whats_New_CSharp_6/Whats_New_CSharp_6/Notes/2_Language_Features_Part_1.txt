AUTO PROPERTY INITIALIZERS
	
	C# right out of the box could define properties for an object

		public class User
		{
			// Globally Unique Identifier
			public Guid Id
			{
				get { return _id; }
			}

			// backing field
			Guid _id = Guid.NewGuid();
		}


	-----> A few years later ------>
	C# had automatically implemented properties
		backing field was generated by the compiler, which also implemented get; set; logic
		BUT you had to always set the property vals inside explicit constructor in order to initialize an auto property


		public class User
		{
			public Guid Id { get; protected set; }
		}


!!!!
	-----> A few years later ------->
	C# 6 allows for Auto Property Initializers
		You can use an automatically implemented property and still provide the property w/ an initial value w/out a constructor
		
		!! Works very well for data transfer objects (DTO), which typically only have properties to carry data
		(no associated methods or behavior)

		public class User
		{
			// auto property initializer
			public Guid Id { get; } = Guid.NewGuid();
		}
